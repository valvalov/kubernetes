{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":"<p>Placeholder content.</p>"},{"location":"administration/RBAC/","title":"Rbac","text":"<p>Placeholder content.</p>"},{"location":"administration/monitoring/","title":"Monitoring","text":"<p>Placeholder content.</p>"},{"location":"administration/user-management/","title":"User Management","text":"<p>Placeholder content.</p>"},{"location":"install/add-repositories/","title":"Add Kubernetes apt repository (pkgs.k8s.io)","text":"<pre><code>sudo apt update\nsudo apt install -y apt-transport-https ca-certificates curl gpg\nsudo mkdir -p -m 755 /etc/apt/keyrings\ncurl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\necho \"deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /\" | sudo tee /etc/apt/sources.list.d/kubernetes.list\nsudo apt update\n</code></pre>"},{"location":"install/airgap/","title":"Airgap","text":"<p>Placeholder content.</p>"},{"location":"install/generate-config/","title":"Generate kubeadm config","text":"<pre><code>kubeadm config print init-defaults\n</code></pre> <p>Then create a file <code>kubeadm-config.yaml</code> with your configuration. Example:</p> <pre><code>apiVersion: kubeadm.k8s.io/v1beta4\nkind: InitConfiguration\nlocalAPIEndpoint:\n  advertiseAddress: 192.168.1.37\n  bindPort: 6443\nnodeRegistration:\n  criSocket: unix:///var/run/containerd/containerd.sock\n  imagePullPolicy: IfNotPresent\n  imagePullSerial: true\n  name: node\n  taints: null\n---\napiVersion: kubeadm.k8s.io/v1beta3\nkind: ClusterConfiguration\nkubernetesVersion: 1.32.0\nnetworking:\n  podSubnet: 10.244.0.0/16\n  serviceSubnet: 10.96.0.0/12\ncontrollerManager:\n  extraArgs:\n    node-cidr-mask-size: \"22\"\n</code></pre>"},{"location":"install/init-control-plane/","title":"Initialize the Kubernetes control-plane","text":"<pre><code>sudo kubeadm init --config kubeadm-config.yaml\n</code></pre> <p>Configure kubectl:</p> <pre><code>mkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n</code></pre> <p>Install CNI:</p> <pre><code>kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml\n</code></pre>"},{"location":"install/install-containerd/","title":"Install containerd","text":"<pre><code>sudo apt update\nsudo apt install -y containerd\nsudo mkdir -p /etc/containerd\ncontainerd config default | sudo tee /etc/containerd/config.toml\n</code></pre> <p>Edit the config:</p> <pre><code>[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options]\n  SystemdCgroup = true\n</code></pre> <p>Then restart:</p> <pre><code>sudo systemctl restart containerd\nsudo systemctl enable containerd\n</code></pre>"},{"location":"install/install-kube-tools/","title":"Install Kubernetes tools","text":"<pre><code>sudo apt update\nsudo apt install -y kubelet kubeadm kubectl\nsudo apt-mark hold kubelet kubeadm kubectl\nsudo systemctl enable --now kubelet\n</code></pre>"},{"location":"install/join-worker/","title":"Join a worker node","text":"<p>Example:</p> <pre><code>kubeadm join 192.168.1.37:6443 --token &lt;token&gt; \\\n    --discovery-token-ca-cert-hash sha256:&lt;hash&gt;\n</code></pre> <p>To generate a new token and get the full command:</p> <pre><code>kubeadm token create --print-join-command\n</code></pre>"},{"location":"install/kubeadm/","title":"Kubeadm","text":"<p>Placeholder content.</p>"},{"location":"install/microk8s/","title":"Microk8S","text":"<p>Placeholder content.</p>"},{"location":"install/multi-node/","title":"Multi Node","text":"<p>Placeholder content.</p>"},{"location":"install/overview/","title":"Overview","text":"<p>Placeholder content.</p>"},{"location":"install/prerequisites/","title":"Prerequisites","text":"<p>To manually enable IPv4 packet forwarding:</p> <pre><code>cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/k8s.conf\nnet.ipv4.ip_forward = 1\nEOF\nsudo sysctl --system\n</code></pre> <p>Verify with:</p> <pre><code>sudo sysctl net.bridge.bridge-nf-call-iptables\nsudo sysctl net.bridge.bridge-nf-call-ip6tables\nsudo sysctl net.ipv4.ip_forward\n</code></pre>"},{"location":"install/single-node/","title":"Single Node","text":"<p>Placeholder content.</p>"},{"location":"install/troubleshooting/","title":"Troubleshooting","text":"<p>Placeholder content.</p>"},{"location":"networking/cni-plugins/","title":"Cni Plugins","text":"<p>Placeholder content.</p>"},{"location":"networking/flannel-calico/","title":"Flannel Calico","text":"<p>Placeholder content.</p>"},{"location":"networking/pod-network/","title":"Pod Network","text":"<p>Placeholder content.</p>"},{"location":"networking/service-network/","title":"Service Network","text":"<p>Placeholder content.</p>"},{"location":"security/best-practices/","title":"Best Practices","text":"<p>Placeholder content.</p>"},{"location":"security/secrets/","title":"Secrets","text":"<p>Placeholder content.</p>"},{"location":"security/tls/","title":"Tls","text":"<p>Placeholder content.</p>"}]}